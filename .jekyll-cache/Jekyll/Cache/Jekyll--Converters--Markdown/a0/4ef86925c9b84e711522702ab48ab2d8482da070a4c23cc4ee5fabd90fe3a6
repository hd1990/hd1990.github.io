I"M<h2 id="软件测试分类思维导图">软件测试分类思维导图</h2>

<p><img src="/images/posts/2023-01-19-软件测试的分类/软件测试的分类.png" alt="软件测试分类思维导图" /></p>

<h2 id="软件测试分类思维导图-文本模式">软件测试分类思维导图-文本模式</h2>
<pre><code class="language-console">按阶段划分
	单元测试
		概念：指对软件中的最小可测单元的检测认证（一般是函数）
		应用场景： 测试某个函数的功能是否正确
	集成测试
		概念： 在单元测试的基础上按照设计要求组装成子系统或系统进行测试
		测试需求： 实践证明，一些模块可以单独工作，但是不能保证集成起来也能正常工作
	系统测试
		概念： 系统测试是将经过集成测试的软件和操作系统/硬件看成一个整体，在实际运行环境下测试
		举例： 百度在浏览器和手机上不同操作系统，都要进行测试
	验收测试
		按对象划分
			产品验收： 基于需求文档的需求验收
			项目验收： 客户根据需求进行验证性测试
		按阶段划分
			α测试（内测版本）
			β测试（公测版本）
			γ测试（待发布版本）
		负责人
			产品： 产品经理
			项目：客户（甲方）或第三方测评机构（乙方）

按代码逻辑划分
	黑盒测试
		概念： 把测试对象看成一个不能打开的黑盒子，测试时候，完全不考虑盒子里面的代码逻辑结构和具体运行，只根据需求文档，检测程序功能是否符合文档中的说明，检测输出结果对不对
		测试依据
			需求文档
		重点： 以客户的角度，从输入的数据和输出的数据的对应关系出发进行测试
		分类
			功能相关
				功能测试
					检查产品是否满足要求
				界面测试
					UI测试，如元素布局
				易用性测试
					用户体验
				专项测试
					如安装卸载升级、网络专项
			性能相关
				性能测试
					模拟用户场景，测试系统的各项性能指标，查看是否满足要求
				压力测试
					在高负载、资源少的情况下运行测试，找出性能隐患
				负载测试
					不断增加负载，测试软件吞吐量上限，以验证系统的负载能力
	白盒测试
		概念：把测试对象看成一个打开的透明盒子，测试时候，测试人员利用内部逻辑结构以及相关信息，通过不同分支检查程序状态，检查程序中每条路线能否按照预定要求正确工作
		测试依据
			源代码
		重点
			必须检查程序的内部结构，从程序的逻辑着手，得出测试的数据（输入和输出的数据）
		对应关系
			单元测试：白盒
			集成测试：白盒
			系统测试：黑盒
			验收测试：黑盒
	灰盒测试
		概念
			介于黑盒与白盒测试之间，只关注一部分代码逻辑

按是否运行代码划分
	静态测试
		概念： 静态测试是指不运行被测程序本身，通过分析或检查程序语法/结构/过程来检查程序的正确性
		测试对象
			文档
				需求文档
				各种设计文档
			源代码
				找出程序可能重复的地方
				找出不安全
	动态测试
		概念： 动态测试就是通过运行被测程序，检查运行结果与预期结果的差距，并分析运行效率、健壮性
		测试对象
			系统
		步骤
			测试用例设计
			执行测试用例
			检查运行实际结果与预期结果

按是否自动化执行划分
	手工测试： 手工的方法去执行测试
	自动化测试：需要借助工具和代码完成手工测试的工作

其他
	回归测试： 回归测试是指修改代码之后，重新进行测试，已确定修改没有引入新的错误
	冒烟测试： 针对最基本的功能或者流程进行测试

来源
	https://blog.csdn.net/karsa__/article/details/108036552

</code></pre>
:ET